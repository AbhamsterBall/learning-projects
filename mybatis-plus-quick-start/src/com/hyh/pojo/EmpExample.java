package com.hyh.pojo;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class EmpExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table SCOTT.EMP
     *
     * @mbg.generated Wed Oct 18 08:23:35 CST 2023
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table SCOTT.EMP
     *
     * @mbg.generated Wed Oct 18 08:23:35 CST 2023
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table SCOTT.EMP
     *
     * @mbg.generated Wed Oct 18 08:23:35 CST 2023
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SCOTT.EMP
     *
     * @mbg.generated Wed Oct 18 08:23:35 CST 2023
     */
    public EmpExample() {
        oredCriteria = new ArrayList<>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SCOTT.EMP
     *
     * @mbg.generated Wed Oct 18 08:23:35 CST 2023
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SCOTT.EMP
     *
     * @mbg.generated Wed Oct 18 08:23:35 CST 2023
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SCOTT.EMP
     *
     * @mbg.generated Wed Oct 18 08:23:35 CST 2023
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SCOTT.EMP
     *
     * @mbg.generated Wed Oct 18 08:23:35 CST 2023
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SCOTT.EMP
     *
     * @mbg.generated Wed Oct 18 08:23:35 CST 2023
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SCOTT.EMP
     *
     * @mbg.generated Wed Oct 18 08:23:35 CST 2023
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SCOTT.EMP
     *
     * @mbg.generated Wed Oct 18 08:23:35 CST 2023
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SCOTT.EMP
     *
     * @mbg.generated Wed Oct 18 08:23:35 CST 2023
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SCOTT.EMP
     *
     * @mbg.generated Wed Oct 18 08:23:35 CST 2023
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SCOTT.EMP
     *
     * @mbg.generated Wed Oct 18 08:23:35 CST 2023
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table SCOTT.EMP
     *
     * @mbg.generated Wed Oct 18 08:23:35 CST 2023
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andEmpEmpnoIsNull() {
            addCriterion("EMPNO is null");
            return (Criteria) this;
        }

        public Criteria andEmpEmpnoIsNotNull() {
            addCriterion("EMPNO is not null");
            return (Criteria) this;
        }

        public Criteria andEmpEmpnoEqualTo(Short value) {
            addCriterion("EMPNO =", value, "empEmpno");
            return (Criteria) this;
        }

        public Criteria andEmpEmpnoNotEqualTo(Short value) {
            addCriterion("EMPNO <>", value, "empEmpno");
            return (Criteria) this;
        }

        public Criteria andEmpEmpnoGreaterThan(Short value) {
            addCriterion("EMPNO >", value, "empEmpno");
            return (Criteria) this;
        }

        public Criteria andEmpEmpnoGreaterThanOrEqualTo(Short value) {
            addCriterion("EMPNO >=", value, "empEmpno");
            return (Criteria) this;
        }

        public Criteria andEmpEmpnoLessThan(Short value) {
            addCriterion("EMPNO <", value, "empEmpno");
            return (Criteria) this;
        }

        public Criteria andEmpEmpnoLessThanOrEqualTo(Short value) {
            addCriterion("EMPNO <=", value, "empEmpno");
            return (Criteria) this;
        }

        public Criteria andEmpEmpnoIn(List<Short> values) {
            addCriterion("EMPNO in", values, "empEmpno");
            return (Criteria) this;
        }

        public Criteria andEmpEmpnoNotIn(List<Short> values) {
            addCriterion("EMPNO not in", values, "empEmpno");
            return (Criteria) this;
        }

        public Criteria andEmpEmpnoBetween(Short value1, Short value2) {
            addCriterion("EMPNO between", value1, value2, "empEmpno");
            return (Criteria) this;
        }

        public Criteria andEmpEmpnoNotBetween(Short value1, Short value2) {
            addCriterion("EMPNO not between", value1, value2, "empEmpno");
            return (Criteria) this;
        }

        public Criteria andEmpEnameIsNull() {
            addCriterion("ENAME is null");
            return (Criteria) this;
        }

        public Criteria andEmpEnameIsNotNull() {
            addCriterion("ENAME is not null");
            return (Criteria) this;
        }

        public Criteria andEmpEnameEqualTo(String value) {
            addCriterion("ENAME =", value, "empEname");
            return (Criteria) this;
        }

        public Criteria andEmpEnameNotEqualTo(String value) {
            addCriterion("ENAME <>", value, "empEname");
            return (Criteria) this;
        }

        public Criteria andEmpEnameGreaterThan(String value) {
            addCriterion("ENAME >", value, "empEname");
            return (Criteria) this;
        }

        public Criteria andEmpEnameGreaterThanOrEqualTo(String value) {
            addCriterion("ENAME >=", value, "empEname");
            return (Criteria) this;
        }

        public Criteria andEmpEnameLessThan(String value) {
            addCriterion("ENAME <", value, "empEname");
            return (Criteria) this;
        }

        public Criteria andEmpEnameLessThanOrEqualTo(String value) {
            addCriterion("ENAME <=", value, "empEname");
            return (Criteria) this;
        }

        public Criteria andEmpEnameLike(String value) {
            addCriterion("ENAME like", value, "empEname");
            return (Criteria) this;
        }

        public Criteria andEmpEnameNotLike(String value) {
            addCriterion("ENAME not like", value, "empEname");
            return (Criteria) this;
        }

        public Criteria andEmpEnameIn(List<String> values) {
            addCriterion("ENAME in", values, "empEname");
            return (Criteria) this;
        }

        public Criteria andEmpEnameNotIn(List<String> values) {
            addCriterion("ENAME not in", values, "empEname");
            return (Criteria) this;
        }

        public Criteria andEmpEnameBetween(String value1, String value2) {
            addCriterion("ENAME between", value1, value2, "empEname");
            return (Criteria) this;
        }

        public Criteria andEmpEnameNotBetween(String value1, String value2) {
            addCriterion("ENAME not between", value1, value2, "empEname");
            return (Criteria) this;
        }

        public Criteria andEmpJobIsNull() {
            addCriterion("JOB is null");
            return (Criteria) this;
        }

        public Criteria andEmpJobIsNotNull() {
            addCriterion("JOB is not null");
            return (Criteria) this;
        }

        public Criteria andEmpJobEqualTo(String value) {
            addCriterion("JOB =", value, "empJob");
            return (Criteria) this;
        }

        public Criteria andEmpJobNotEqualTo(String value) {
            addCriterion("JOB <>", value, "empJob");
            return (Criteria) this;
        }

        public Criteria andEmpJobGreaterThan(String value) {
            addCriterion("JOB >", value, "empJob");
            return (Criteria) this;
        }

        public Criteria andEmpJobGreaterThanOrEqualTo(String value) {
            addCriterion("JOB >=", value, "empJob");
            return (Criteria) this;
        }

        public Criteria andEmpJobLessThan(String value) {
            addCriterion("JOB <", value, "empJob");
            return (Criteria) this;
        }

        public Criteria andEmpJobLessThanOrEqualTo(String value) {
            addCriterion("JOB <=", value, "empJob");
            return (Criteria) this;
        }

        public Criteria andEmpJobLike(String value) {
            addCriterion("JOB like", value, "empJob");
            return (Criteria) this;
        }

        public Criteria andEmpJobNotLike(String value) {
            addCriterion("JOB not like", value, "empJob");
            return (Criteria) this;
        }

        public Criteria andEmpJobIn(List<String> values) {
            addCriterion("JOB in", values, "empJob");
            return (Criteria) this;
        }

        public Criteria andEmpJobNotIn(List<String> values) {
            addCriterion("JOB not in", values, "empJob");
            return (Criteria) this;
        }

        public Criteria andEmpJobBetween(String value1, String value2) {
            addCriterion("JOB between", value1, value2, "empJob");
            return (Criteria) this;
        }

        public Criteria andEmpJobNotBetween(String value1, String value2) {
            addCriterion("JOB not between", value1, value2, "empJob");
            return (Criteria) this;
        }

        public Criteria andEmpMgrIsNull() {
            addCriterion("MGR is null");
            return (Criteria) this;
        }

        public Criteria andEmpMgrIsNotNull() {
            addCriterion("MGR is not null");
            return (Criteria) this;
        }

        public Criteria andEmpMgrEqualTo(Short value) {
            addCriterion("MGR =", value, "empMgr");
            return (Criteria) this;
        }

        public Criteria andEmpMgrNotEqualTo(Short value) {
            addCriterion("MGR <>", value, "empMgr");
            return (Criteria) this;
        }

        public Criteria andEmpMgrGreaterThan(Short value) {
            addCriterion("MGR >", value, "empMgr");
            return (Criteria) this;
        }

        public Criteria andEmpMgrGreaterThanOrEqualTo(Short value) {
            addCriterion("MGR >=", value, "empMgr");
            return (Criteria) this;
        }

        public Criteria andEmpMgrLessThan(Short value) {
            addCriterion("MGR <", value, "empMgr");
            return (Criteria) this;
        }

        public Criteria andEmpMgrLessThanOrEqualTo(Short value) {
            addCriterion("MGR <=", value, "empMgr");
            return (Criteria) this;
        }

        public Criteria andEmpMgrIn(List<Short> values) {
            addCriterion("MGR in", values, "empMgr");
            return (Criteria) this;
        }

        public Criteria andEmpMgrNotIn(List<Short> values) {
            addCriterion("MGR not in", values, "empMgr");
            return (Criteria) this;
        }

        public Criteria andEmpMgrBetween(Short value1, Short value2) {
            addCriterion("MGR between", value1, value2, "empMgr");
            return (Criteria) this;
        }

        public Criteria andEmpMgrNotBetween(Short value1, Short value2) {
            addCriterion("MGR not between", value1, value2, "empMgr");
            return (Criteria) this;
        }

        public Criteria andEmpHiredateIsNull() {
            addCriterion("HIREDATE is null");
            return (Criteria) this;
        }

        public Criteria andEmpHiredateIsNotNull() {
            addCriterion("HIREDATE is not null");
            return (Criteria) this;
        }

        public Criteria andEmpHiredateEqualTo(Date value) {
            addCriterion("HIREDATE =", value, "empHiredate");
            return (Criteria) this;
        }

        public Criteria andEmpHiredateNotEqualTo(Date value) {
            addCriterion("HIREDATE <>", value, "empHiredate");
            return (Criteria) this;
        }

        public Criteria andEmpHiredateGreaterThan(Date value) {
            addCriterion("HIREDATE >", value, "empHiredate");
            return (Criteria) this;
        }

        public Criteria andEmpHiredateGreaterThanOrEqualTo(Date value) {
            addCriterion("HIREDATE >=", value, "empHiredate");
            return (Criteria) this;
        }

        public Criteria andEmpHiredateLessThan(Date value) {
            addCriterion("HIREDATE <", value, "empHiredate");
            return (Criteria) this;
        }

        public Criteria andEmpHiredateLessThanOrEqualTo(Date value) {
            addCriterion("HIREDATE <=", value, "empHiredate");
            return (Criteria) this;
        }

        public Criteria andEmpHiredateIn(List<Date> values) {
            addCriterion("HIREDATE in", values, "empHiredate");
            return (Criteria) this;
        }

        public Criteria andEmpHiredateNotIn(List<Date> values) {
            addCriterion("HIREDATE not in", values, "empHiredate");
            return (Criteria) this;
        }

        public Criteria andEmpHiredateBetween(Date value1, Date value2) {
            addCriterion("HIREDATE between", value1, value2, "empHiredate");
            return (Criteria) this;
        }

        public Criteria andEmpHiredateNotBetween(Date value1, Date value2) {
            addCriterion("HIREDATE not between", value1, value2, "empHiredate");
            return (Criteria) this;
        }

        public Criteria andEmpSalIsNull() {
            addCriterion("SAL is null");
            return (Criteria) this;
        }

        public Criteria andEmpSalIsNotNull() {
            addCriterion("SAL is not null");
            return (Criteria) this;
        }

        public Criteria andEmpSalEqualTo(BigDecimal value) {
            addCriterion("SAL =", value, "empSal");
            return (Criteria) this;
        }

        public Criteria andEmpSalNotEqualTo(BigDecimal value) {
            addCriterion("SAL <>", value, "empSal");
            return (Criteria) this;
        }

        public Criteria andEmpSalGreaterThan(BigDecimal value) {
            addCriterion("SAL >", value, "empSal");
            return (Criteria) this;
        }

        public Criteria andEmpSalGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("SAL >=", value, "empSal");
            return (Criteria) this;
        }

        public Criteria andEmpSalLessThan(BigDecimal value) {
            addCriterion("SAL <", value, "empSal");
            return (Criteria) this;
        }

        public Criteria andEmpSalLessThanOrEqualTo(BigDecimal value) {
            addCriterion("SAL <=", value, "empSal");
            return (Criteria) this;
        }

        public Criteria andEmpSalIn(List<BigDecimal> values) {
            addCriterion("SAL in", values, "empSal");
            return (Criteria) this;
        }

        public Criteria andEmpSalNotIn(List<BigDecimal> values) {
            addCriterion("SAL not in", values, "empSal");
            return (Criteria) this;
        }

        public Criteria andEmpSalBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("SAL between", value1, value2, "empSal");
            return (Criteria) this;
        }

        public Criteria andEmpSalNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("SAL not between", value1, value2, "empSal");
            return (Criteria) this;
        }

        public Criteria andEmpCommIsNull() {
            addCriterion("COMM is null");
            return (Criteria) this;
        }

        public Criteria andEmpCommIsNotNull() {
            addCriterion("COMM is not null");
            return (Criteria) this;
        }

        public Criteria andEmpCommEqualTo(BigDecimal value) {
            addCriterion("COMM =", value, "empComm");
            return (Criteria) this;
        }

        public Criteria andEmpCommNotEqualTo(BigDecimal value) {
            addCriterion("COMM <>", value, "empComm");
            return (Criteria) this;
        }

        public Criteria andEmpCommGreaterThan(BigDecimal value) {
            addCriterion("COMM >", value, "empComm");
            return (Criteria) this;
        }

        public Criteria andEmpCommGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("COMM >=", value, "empComm");
            return (Criteria) this;
        }

        public Criteria andEmpCommLessThan(BigDecimal value) {
            addCriterion("COMM <", value, "empComm");
            return (Criteria) this;
        }

        public Criteria andEmpCommLessThanOrEqualTo(BigDecimal value) {
            addCriterion("COMM <=", value, "empComm");
            return (Criteria) this;
        }

        public Criteria andEmpCommIn(List<BigDecimal> values) {
            addCriterion("COMM in", values, "empComm");
            return (Criteria) this;
        }

        public Criteria andEmpCommNotIn(List<BigDecimal> values) {
            addCriterion("COMM not in", values, "empComm");
            return (Criteria) this;
        }

        public Criteria andEmpCommBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("COMM between", value1, value2, "empComm");
            return (Criteria) this;
        }

        public Criteria andEmpCommNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("COMM not between", value1, value2, "empComm");
            return (Criteria) this;
        }

        public Criteria andEmpDeptnoIsNull() {
            addCriterion("DEPTNO is null");
            return (Criteria) this;
        }

        public Criteria andEmpDeptnoIsNotNull() {
            addCriterion("DEPTNO is not null");
            return (Criteria) this;
        }

        public Criteria andEmpDeptnoEqualTo(Short value) {
            addCriterion("DEPTNO =", value, "empDeptno");
            return (Criteria) this;
        }

        public Criteria andEmpDeptnoNotEqualTo(Short value) {
            addCriterion("DEPTNO <>", value, "empDeptno");
            return (Criteria) this;
        }

        public Criteria andEmpDeptnoGreaterThan(Short value) {
            addCriterion("DEPTNO >", value, "empDeptno");
            return (Criteria) this;
        }

        public Criteria andEmpDeptnoGreaterThanOrEqualTo(Short value) {
            addCriterion("DEPTNO >=", value, "empDeptno");
            return (Criteria) this;
        }

        public Criteria andEmpDeptnoLessThan(Short value) {
            addCriterion("DEPTNO <", value, "empDeptno");
            return (Criteria) this;
        }

        public Criteria andEmpDeptnoLessThanOrEqualTo(Short value) {
            addCriterion("DEPTNO <=", value, "empDeptno");
            return (Criteria) this;
        }

        public Criteria andEmpDeptnoIn(List<Short> values) {
            addCriterion("DEPTNO in", values, "empDeptno");
            return (Criteria) this;
        }

        public Criteria andEmpDeptnoNotIn(List<Short> values) {
            addCriterion("DEPTNO not in", values, "empDeptno");
            return (Criteria) this;
        }

        public Criteria andEmpDeptnoBetween(Short value1, Short value2) {
            addCriterion("DEPTNO between", value1, value2, "empDeptno");
            return (Criteria) this;
        }

        public Criteria andEmpDeptnoNotBetween(Short value1, Short value2) {
            addCriterion("DEPTNO not between", value1, value2, "empDeptno");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table SCOTT.EMP
     *
     * @mbg.generated do_not_delete_during_merge Wed Oct 18 08:23:35 CST 2023
     */
    public static class Criteria extends GeneratedCriteria {
        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table SCOTT.EMP
     *
     * @mbg.generated Wed Oct 18 08:23:35 CST 2023
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}